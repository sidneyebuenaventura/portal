# Generated by Django 3.2.14 on 2022-07-28 17:57

from django.db import migrations, models
import slu.framework.models
import slu.framework.validators
import slu.payment.models


class Migration(migrations.Migration):

    dependencies = [
        ('payment', '0026_cashiertransaction_receipt_id'),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentSettlement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('settlement_id', models.CharField(max_length=255, null=True)),
                ('file', models.FileField(upload_to=slu.payment.models.payment_settlement_file_path, validators=[slu.framework.validators.csv_file_validator])),
                ('payment_method', slu.framework.models.TextChoiceField(choices=[('DP', 'Dragonpay'), ('B', 'Bukas'), ('OTC', 'BDO'), ('C', 'School Cashier')], help_text='```json\n{\n    "DP": "Dragonpay",\n    "B": "Bukas",\n    "OTC": "BDO",\n    "C": "School Cashier"\n}\n```', max_length=3)),
                ('status', slu.framework.models.TextChoiceField(choices=[('P', 'Pending'), ('O', 'Processing'), ('F', 'Failed'), ('C', 'Completed')], default='P', help_text='```json\n{\n    "P": "Pending",\n    "O": "Processing",\n    "F": "Failed",\n    "C": "Completed"\n}\n```', max_length=2)),
                ('error_message', models.TextField(blank=True)),
                ('settled', models.IntegerField(default=0, help_text='Settled transactions')),
                ('skipped', models.IntegerField(default=0, help_text='Skipped transactions that are already settled')),
                ('invalid', models.IntegerField(default=0, help_text='Transactions not found')),
                ('total', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
            bases=(slu.framework.models.BaseModelMixin, models.Model),
        ),
    ]
